[PARSER]
       Name          consul
       Format        regex
       Regex (?<timestamp>\d{4}\/\d\d\/\d\d \d\d:\d\d:\d\d) (?:\[(?<level>[A-Z]*)\] |)(?<message>.*)
       Time_Key      timestamp
       Time_format   %Y/%m/%d%n%R:%S
[PARSER]
       Name          consul_telemetry
       Format        regex
       Regex (?<timestamp>\d{4}-\d\d-\d\d \d\d:\d\d:\d\d [+-]\d{4} [A-Z]{3})\]\[(?<type>[A-Z])\] '(?<metric>[^']+)': (?<message>.*)
       Time_Key      timestamp
       Time_format   %F %T %z
[PARSER]
       Name          vault
       Format        regex
       Regex (?<timestamp>\d{4}\/\d\d\/\d\d \d\d:\d\d:\d\d\.\d{6}) (?:\[?(?<level>[A-Z]+) ?\]?:? |)(?<message>.*)
       Time_Key      timestamp
       Time_format   %Y/%m/%d%n%R:%S
[PARSER]
       # possibly problematic
       Name          consul_vault_reload
       Format        regex
       regex  ==> (?:(?<level>[A-Z]*): |)(?<message>.*)
[PARSER]
       Name          crunchy_database
       Format        regex
       regex         (?<timestamp>\d{4}-\d{2}-\d{2} (\d{2}:?){3}),\d{3} (?<level>\w+):\s+(?<message>.*)
       Time_Key      timestamp
       Time_format   %F %H:%M:%S,%L
[PARSER]
       Name          istioPilot
       # hacked together
       Format        regex
       regex  (?<timestamp>\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d\.\d+Z)\s+(?<level>\w+)\s+(?<message>.+)
       Time_Key      timestamp
       #Time_format   %Y-%m-%dT%H:%M:%S.%L %z
[PARSER]
       Name          istioPilot2
       # hacked together
       Format        regex
       regex  (?<message>.+)
[PARSER]
       Name          fluentbit
       # hacked together
       Format        regex
       regex  \[(?<timestamp>\d{4}\/\d\d\/\d\d \d\d:\d\d:\d\d)\]\s*\[\s?(?<level>\w+)\]\s*(?<message>\[?\w+:?\w+\]?\s*.*)
       Time_Key      timestamp
       Time_format   %Y/%m/%d %T
[PARSER]
       Name          operatorx
       Format        logfmt
[PARSER]
       Name          operator
       Format        regex
       regex         time="(?<timestamp>\d{4}-\d{2}-\d{2} (\d{2}:?){3} (-|\+)\d{4})" level=(?<level>\w+)\s+msg=(?<message>.*)
       Time_Key      timestamp
       Time_format   %Y-%m-%d %H:%M:%S %z
[PARSER]
       Name          k8sdash
       # kubernetes-dasboard
       Format        regex
       regex (?<ip_address>(\d+\.?){4}) - - \[(?<timestamp>\d{2}\/\w{3}\/\d{4}(:\d{2}){3} (-|\+)\d{4})]\s*(?<message>.+)
       Time_Key      timestamp
       Time_format   %e/%b/%Y:%k:%M:%S %z
[PARSER]
       Name          elasticsearch
       # ODFE
       Format        regex
       regex         \[(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2},\d{3})\]\[(?<level>\w+)\s*\](?<message>\[(\S*)\s*\]\s*\[(\S+)\]\s*(.+))
       Time_Key      timestamp
       Time_format   %Y-%m-%dT%H:%M:%S,%L
[PARSER]
       Name          nginx-ingress
       # nginx-ingress-controller
       Format        regex
       regex         (?<remote_host>(\d+\.?){4}) ((\S+)|-) ((?<user>\S+)|-) \[(?<timestamp>\d{2}\/\w{3}\/\d{4}(:\d{2}){3} (-|\+)\d{4})]\s*(?<message>(?<request>"(?<method>\S+) (?<url>.+?)") (?<status>\d{3}) .+)
       #regex (?<remote_host>(\d+\.?){4}) ((\S+)|-) ((?<user>\S+)|-) \[(?<timestamp>\d{2}\/\w{3}\/\d{4}(:\d{2}){3} (-|\+)\d{4})]\s*(?<message>.+)
       Time_Key      timestamp
       Time_format   %e/%b/%Y:%k:%M:%S %z
[PARSER]
       Name          nginx-ingress-stderr1
       # nginx-ingress-controller - STDERR Messages
       Format        regex
       regex         (?<timestamp>\d{4}\/\d{2}\/\d{2} (\d{2}:?){3}) \[(?<level>\w+)\] (?<message>.+)
       Time_Key      timestamp
       Time_format   %Y/%m/%d %T
[PARSER]
       Name          misc-stderr2
       # A frequently seen format for messages from stderr; starts w/ a single character LEVEL
       # seen:  nginx-ingress-controller, K8s Operators
       Format        regex
       #regex         (?<err_code>(?<level>\w{1})(?<err_num>\d{4})) (?<time>(\d{2}:?){3}\.\d{6})(?<message>.+)
       #regex         (?<message>(?<err_code>(?<level>\w{1})(?<err_num>\d{4})) (?<time>(\d{2}:?){3}\.\d{6}).+)
       #regex         (?<level>[A-Z]{1})(?<msgtime>\d{2}\d{2} (\d{2}:?){3}.\d{3})\d{3}\s+(?<message>.+)
       regex         (?<level>[A-Z]{1})(?<msgtime>\d{2}\d{2} (\d{2}:?){3}.\d{3})\d{3}\s+((?<caller>.+)]\s)?(?<message>.+)
       Time_Key      msgtime
       Time_format   %m%d %H:%M:%S.%L
[PARSER]
       Name          sas-rabbitmq
       # sas-rabbitmq-server
       Format        regex
       regex         (?<timestamp>\d{4}-\d{2}-\d{2} (\d{2}:?){3}\.\d{3}) \[(?<level>\w+)\] (?<message>.+)
       Time_Key      timestamp
       Time_format   %Y-%m-%d %H:%M:%S.%L
[PARSER]
       Name          sas-rabbitmq-stderr
       # sas-rabbitmq-server STDERR
       Format        regex
       regex         (?<message>.*level=(?<level>\w+)\s.*)
[PARSER]
       Name          etcd
       # Only first 3 digits of sub-seconds captured
       Format        regex
       regex         (?<timestamp>\d{4}-\d{2}-\d{2} (\d{2}:?){3}\.\d{3})\d{3} (?<level>\w{1}) \| (?<message>.+)
       Time_Key      timestamp
       Time_format   %Y-%m-%d %H:%M:%S.%L
[PARSER]
       Name          misc2
       Format        regex
       regex         (?<timestamp>\d{4}\/\d{2}\/\d{2} (\d{2}:?){3}) (?<message>((?<level>\w+):)?.+)
       Time_Key      timestamp
       Time_format   %Y/%m/%d %H:%M:%S
[PARSER]
       Name          misc3
       Format        regex
       regex         (?<timestamp>\d{4}(-\d{2}){2} \d{2}(:\d{2}){2})\s+-\s+\[(?<level>[A-Z]*)\]\s+-\s+(?<message>.*)
       Time_Key      timestamp
       Time_format   %Y-%m-%d %H:%M:%S
[PARSER]
       Name          logfmt
       Format        logfmt
[PARSER]
       Name          crunchy_stderr3
       Format        regex
       regex         (?<timestamp>\d{4}(\/\d{2}){2} (\d{2}:?){3})\s+(?<level>[A-Z]{3})\s+(?<message>.+)
       Time_Key      timestamp
       Time_format   %Y/%m/%d %H:%M:%S
[PARSER]
       # crunchy apiserver sample: time="2020-05-21 18:54:21 +0000" level=info msg="listening on port 8443" func="main.main()" file="apiserver.go:171" version=4.2.2
       # crunchy collect sample: time="2020-05-21T18:53:10Z" level=info msg="Starting Server: :9187" source="postgres_exporter.go:1178"
       Name          collectapi
       Format        regex
       regex         time="(?<timestamp>\d{4}(-\d{2}){2}(\s|T?)(\d{2}:?){3})(?<timezone>.*)"\s+level=(?<level>\w+)\s+msg=(?<message>.*)
       Time_Key      timestamp
       Time_format   %Y-%m-%d %H:%M:%S
[PARSER]
       Name          gopanic
       Format        regex
       regex         (?<message>(?<level>^panic):.*)
